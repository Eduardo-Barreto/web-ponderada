version: '3.8'

services:
  # Database Service (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Mount init script to create database schema
      - ./src/backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: webappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  # Backend Service (GoLang/Gin)
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: backend_app
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - uploads_data:/app/uploads # Mount volume for image uploads
      # Optional: Mount source code for development (hot-reloading setup needed in Go)
      # - ./src/backend:/app
    environment:
      GIN_MODE: release # Use 'debug' for development
      PORT: 8000
      DATABASE_URL: "postgres://user:password@db:5432/webappdb?sslmode=disable"
      JWT_SECRET: your-secret-key # CHANGE THIS IN PRODUCTION
      # Add other backend env vars as needed (e.g., CORS origins)
      UPLOAD_DIR: /app/uploads # Path inside the container
    networks:
      - app-network
    ports:
      - "8000:8000"

  # Web Server / Reverse Proxy (Nginx)
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_proxy
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      # Expose port 80 (HTTP) - Map host port 8000 to container port 80
      - "${NGINX_PORT:-8000}:80"
      # Optional: Expose port 443 (HTTPS) - Requires SSL certificate setup
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # Optional: Mount SSL certificates
      # - ./path/to/certs:/etc/nginx/certs:ro
    networks:
      - app-network

  # Frontend Service
  frontend:
    build: 
      context: ./src/frontend
    container_name: frontend_app
    restart: unless-stopped
    volumes:
      - ./src/frontend/public:/usr/share/nginx/html
    ports:
      - "3000:80"  # Changed from 80:80 to 3000:80
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge

# Define persistent volumes
volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local # Stores uploaded images persistently
